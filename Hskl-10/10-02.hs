   -- Демонстрация формальных преобразований функций на языке
   -- Haskell  с  использованием комбинаторного исчисления на
   -- примере вычисления значения арифметического выражения
   --
   --   x+|y|
   -- *****************************
   -- Функция fun1 до трансформации
   --------------------------------
   fun1:: Int -> Int -> Int 
   fun1 x y = (+) x (abs y)
   -- ********************************************
   -- Демонстрация "по шагам" этапов трансформации
   -- с помощью комбинаторов:
   --
   --   Babc=a(bc), Cabc=acb
   -------------------------
   -- Первый вариант
   ------------------------------------
   -- Mx(Py) = CM(Py)x    = (CM(Py))x =
   --        = (B(CM)P)yx = C(B(CM)P)xy
   ---------------------------------------------
   -- Демонстрация по шагам этапов трансформации
   -- с помощью языка Haskell:
   --   (1) flip - это аналог комбинатора C;
   --   (2) (.)  - это аналог комбинатора B
   ----------------------------------------
   y1 = (+) 3 (abs (-4))
   y2 = flip (+) (abs (-4)) 3
   y3 = (flip (+) (abs (-4))) 3
   y4 = ((.) (flip (+)) (abs)) (-4) 3
   y5 = flip ((.) (flip (+)) (abs)) 3 (-4)
   ---------------------------------------
   -- Функция fun1 после трансформации
   -----------------------------------
   fun2:: Int -> Int -> Int  
   fun2 x y = flip ((.) (flip (+)) (abs)) x y
   --------------------------------------------------------
   -- Функция fun1 после трансформации (в виде комбинатора)
   -------------------------------------------------------- 
   fun21:: Int -> Int -> Int
   fun21 = flip ((.) (flip (+)) (abs))
   -- ********************************
   -- Второй вариант
   --------------------
   -- Mx(Py) = (Mx)(Py) 
   --        = B(Mx)Py  = (B(Mx))Py = (BBMx)Py
   --        = (BBM)xPy = C(BBM)Pxy
   --------------------------------------------- 
   -- Демонстрация по шагам этапов трансформации
   -- с помощью языка Haskell:
   --   (1) flip - это аналог комбинатора C;
   --   (2) (.)  - это аналог комбинатора B
   ----------------------------------------
   z1 = (+) 3 (abs (-4))
   z2 = ((.) ((+) 3)) (abs) (-4) 
   z3 = ((.) (.) (+)) 3 (abs) (-4)
   z4 = flip ((.) (.) (+)) (abs) 3 (-4)
   ------------------------------------
   -- Функция fun1 после трансформации
   -----------------------------------
   fun2':: Int -> Int -> Int  
   fun2' x y = flip ((.) (.) (+)) (abs) x y
   --------------------------------------------------------
   -- Функция fun1 после трансформации (в виде комбинатора)
   -------------------------------------------------------- 
   fun21':: Int -> Int -> Int
   fun21' = flip ((.) (.) (+)) (abs)
   -- ******************************
   -- Неудачные тестовые примеры:
   ---------------------------------------------
   test =   y1==y2 && y2==y3 && y3==y4 && y4==y5
         && y5==z1 && z1==z2 && z2==z3 && z3==z4
         && fun2 (-2) (-5) == fun2'  (-2) (-5)
         && fun21 (-3)  4  == fun21' (-3)  4
