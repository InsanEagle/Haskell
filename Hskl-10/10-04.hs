   -- Демонстрация использования lambda-нотации для
   -- построения функционалов на языке Haskell
   -- ****************************************
   -- Функционал, моделирующий lambda-терм
   --
   -- (lambda x).(lambda y).g(fx)(fy)
   ----------------------------------- 
   fnc g f = \x -> \y -> g (f x) (f y)
   -------------------------------------------------
   -- Эквивалентное представление функционала в виде
   -- комбинатора (бесточечное представление)
   ------------------------------------------
   fnc' g f = flip ((.) (flip ((.) g f)) f)
   -- ****************************************
   -- Вспомогательные функции для тестирования  
   -------------------------------------------
   sqr:: Int -> Int
   sqr n = n*n
   -----------------------
   add:: Int -> Int -> Int
   add a b = a+b
   -- ***************************
   -- Неудачные тестовые примеры:
   -----------------------------------
   test1 =   fnc add sqr  3  4  ==  25
          && fnc add sqr 10 11  == 221
   -----------------------------------
   test2 =   fnc' add sqr  3  4 ==  25
          && fnc' add sqr 10 11 == 221
