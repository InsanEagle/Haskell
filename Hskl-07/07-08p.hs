   -- Демонстрация оригами-программирования в
   -- unfold-стиле
   -- ***********************
   unfold p f g x | p x  = [] 
                  | True = f x : unfold p f g (g x)

   -- ******************************************
   -- Функция возвращает k цифр правильной дроби
   -- вида n/m, n<m, где m - простое число, m=3,7,....
   --
   -- Тестовые примеры: 4/7=0.(571428), 6/7=0.(857142)
   -- **********************************************************
   abcd n m = (take (fromInteger $ period m 1) . unfold p f g) n
          where p = \x -> False
                f = \x -> x*10 `div` m
                g = \x -> x*10 `mod` m
   ----------------------------------------------
   -- Функция возвращает длину периода дроби 1/n,
   -- где n - простое число (при запуске m=1)
   ------------------------------------------
   period:: Integer -> Integer -> Integer
   period n m | n == 3       = 1
              | rem m n == 0 = z
              | True         = period n (m + 10^z)
         where z = fromInt $ length $ show m

   -- *************************
   -- Функции для тестирования:
   ---------------------------------------------------------
   oracul = [(  3, 1),(  7,  6),( 11,  2),( 13, 6),( 17,16),
             ( 19,18),( 29, 28),( 97, 96),(101, 4),(103,34),
             (107,53),(109,108),(113,112),(199,99)]
   ------------------------------------------------
   test1 = map (\(a,b) -> period a 1 == b) oracul
   ----------------------------------------------
   test2 = map (\x -> (x, period x 1))
               (filter isPrime $ [3] ++ [7..])
          where isPrime x = dividers x==[1,x]
                dividers n = [x | x <- [1..n], mod n x==0]
   test3 = map (\x -> elem x test2) oracul
