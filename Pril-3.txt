    2ПРИЛОЖЕНИЕ 3.
    2ТЕОРИЯ ОШИБОК 0 ( 1автор: В.Тихонов 0)

 ш1.0
                             1Ошибки так же неисчерпаемы, как и атом.
 ш1.2

    2Аксиома 0. В любой программе есть ошибки.
    2Закон пропорциональности 0.
 ш1.1
   Чем больше программа необходима, тем больше в ней ошибок.

 ш1.2
    _ 1Следствие .. 0
 ш1.1
   Ошибок не содержит лишь совершенно ненужная программа.

 ш1.2
    2Фундаментальный закон теории ошибок 0. На ошибках учатся.
    _ 1Следствия ..
 ш1.0
    21. 0 Программист, написавший программу, становится учёным.
    22. 0 Чем больше программист делает ошибок,  тем быстрее он  стано-
вится учёным.
    23. 0 Крупный учёный-программист никогда не пишет правильной  прог-
раммы.

 ш1.2
    3Замечание 1.
 ш1.1
   На то он и учёный.

 ш1.2
    1Указание начинающему программисту. 0
 ш1.1
   Если вы с первого раза  сумели  написать  программу,  в  которой
транслятор не обнаружил ни одной ошибки, сообщите об этом системно-
му программисту. Он исправит ошибки в трансляторе.

 ш1.2
    2Закон находимости ошибок 0.
 ш1.1
   Программист может обнаружить ошибку только в чужой программе.

 ш1.2
    _ 1Следствие .. 0 Ошибке не все равно, кто её обнаружил.
    _ 1Совет начинающему программисту ..
 ш1.1
   Никогда не исправляйте найденные ошибки, ибо это повлечет за со-
бой  появление  неизвестного числа ненайденных.  Лучше опишите их в
сопроводительной документации как особенность программы.

 ш1.2
                             3Язык ошибок
    2Определение 0.
 ш1.1
   Будем называть   _ 1языком  ошибок . 0 правила,  в обход которых пишутся
программы.

   Ошибки могут следовать друг за другом.
   От перестановки двух эквивалентных ошибок результат не  меняется
(коммутативность эквивалентных ошибок).
   Две последовательные  ошибки можно объединить в одну более силь-
ную.
   Одинаковые ошибки  необязательно  делать каждый раз,  достаточно
сделать одну, а затем обращаться к ней по мере необходимости из лю-
бого места программы.
   Ошибки могут образовывать циклы.  Наиболее устойчивый из  них  -
бесконечный.
   Ошибки могут вызывать друг друга и сами себя (рекурсивность оши-
бок).
   Ошибки допускают многократное вложение друг в друга.
   Две одинаковые вложенные  ошибки  называются   _ 1чётной  ошибкой . 0  и
ошибкой не являются.

 ш1.2
    1Свойство чётности ошибок.
 ш1.1
   Если написанная  программа  сработала правильно,  то это значит,
что во время её работы выполнилось чётное число ошибок или програм-
мист не понял задание.

 ш1.2
    1Свойство чётности ошибок 0  1для политиков 0.
 ш1.1
   Ошибка, повторенная дважды, перестает быть ошибкой.

 ш1.2
        3Взаимодействие ошибок с базовой 0  3операционной системой
 ш1.1
   Во время исполнения программы ошибки имеют наивысший  приоритет.
Прервать  исполнение  ошибки  может  только другая,  более активная
ошибка.
   Запросы операционной  системы к ошибкам ошибками могут игнориро-
ваться.
   Запросы ошибок к операционной системе игнорироваться не могут.
   При работе с файлами ошибки могут пользоваться файловой системой
базовой операционной системы и её ошибками.
   На ЭВМ с параллельной архитектурой может  выполняться  несколько
ошибок одновременно.

 ш1.2
                         3Системные программы
   Системные программы облегчают процесс написания прикладных прог-
рамм и их ошибок.
    2Определение 0.
 ш1.1
    _ 1Тестирование . 2  0- это процесс нахождения ошибок в тесте.

 ш1.2
   Хороший тест должен содержать ошибки, компенсирующие их нехватку
в тестируемой программе.
   Языковый редактор,  призванный уберечь программиста от синтакси-
ческих  ошибок,  позволяет  вносить  в  программу весьма хитроумные
ошибки,  которые не удается обнаружить ни транслятором, ни отладчи-
ком.  Обычный текстовый редактор таких возможностей не предоставля-
ет. Программа-транслятор,  предназначенная  для перевода программ с
языка высокого уровня на  машинный  язык,  при  переводе  порождает
ошибки. Ошибки, которые содержались в исходном описании, переводят-
ся безошибочно.
    _ 1Заключительный совет . 0 ( 1тем, кто до него добрался 0).
 ш1.1
   До начала  работы  над  проектом следует тщательно продумать все
необходимые ошибки и связи между ними. Это значительно упростит ра-
боту над ошибками в самом проекте.
 ш1.2
