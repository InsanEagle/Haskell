  -- Лабораторная работа №6
  -- Функционалы (функции высшего порядка)
  -- Вариант 9(1)
  -- Гончаренко Шамиль ИСИТ (2 подгруппа)
  -------------------------------------------------------


  --------------------- Раздел 1 ------------------------


  -- Задание(1). Определите назначение следующих функций

  -- (1). Функция принимает один аргумет и выводит список из чисел
  --      1 и 0, где 1 - число в масиве было нечечным и 0 - четным.

  -- (2). Функция принимает один аргумент - список целых чисел, и выводит
  --      True, если сумма элементов массива меньше или равно 0.
 
  -- (3). Функция принимает один аргумент - список символов и выводит
  --      ASCII код символа минус ASCII код '0'.

  -- (4). Функция принимает два аргумента - список и выводит
  --      один список, состоящий из отрицательных элементов первого
  --      списка и не отрицательных элементов второго списка.

  -- (5). Функция принимет один аргумент - двухуровневый список целых чисел
  --      и выводит количество двухуровневых списков в которых есть элемент x.

  -- (6). Функция принимает список от 1 до 100 и выводит список, состоящий из квадрата числа от 1 до 100 и 
  --      квадрата этого квадрата, если в квадрате числа от 1 до 100 есть 3.

  -- (7). Функция принимает список от 1 до 45 и выводит длину числа, получившегося 
  --      при произведении всех чисел, затем результат берется наоборот и проверяется
  --      до первого встречного '0'.

  -- (8). Функция переводит двоичное представление числа в десятичное.

  -- (9). Функция принимает два аргумента - вещественное и целое числа и выводит
  --      сумму k элементов иттерированных синусов числа x.

  -- (10). Функция принимает один аргумент - вещественное число и выводит целое число - ближайший целый результат 
  --       вычисления логарифма по основанию два.

  -- (11). Функция принимает один аргумент - целое число и выводит результат вычисления золотого сечения с n иттерациями


  ----------------------------------------------------------      


  -- Задание (5). Напишите функцию, в которой используется функционал dropWhile
  --              с предикатом ==, удаляющую элементы из начала списка.

	f1 lst = dropWhile (== head lst) lst
  
		
  -------------- Test ---------------
	f1Test = f1 [1,2,5,3,10,4]
  -----------------------------------
               

  --------------------- Раздел 2 ------------------------


  -- Задание(1). Напишите функцию, использующую функционалы и конструирующую
  --             список из двух заданных таким образом, что из первого списка
  --             берутся только отрицательные числа, а из второго - только положительные.

	f2 lst1 lst2 = filter (<0) lst1 ++ filter (>0) lst2		
     

  -------------- Test ---------------
	f2Test = f2 [1,2,-5,3,-10,4,0,-1] [3,-2,1,-6,3,10,0]
  -----------------------------------


  -------------------------------------------------------



  -- Задание(2). Напишите функцию, использующую функционалы и объединяюую
  --             первую половину элементов первого списка со второй половиной элементов второго.


	f3 lst1 lst2 = take (length lst1 `div` 2) lst1 ++ drop (length lst2 `div` 2) lst2                                              

		
  -------------- Test ---------------
	f3Test1 = f3 [1,2,-5,3,-10,4,0,-1] [3,-2,1,-6,3,10,0]
	f3Test2 = f3 [1..10] [3,6..21]
  -----------------------------------


  -------------------------------------------------------


  -- Задание(2). Напишите функцию, использующую функционалы и конструирующую список из n
  --             элементов k, где k - неотрицательный минимальный элемент заданного списка.


	f4 n lst = take n (repeat (minimum (filter (>0) lst)))                                               

		
  -------------- Test ---------------
	f4Test1 = f4 5 [1,2,-5,3,-10,4,0,-1] 
	f4Test2 = f4 3 [3,6..21]
  -----------------------------------


  --------------------- Раздел 3 ------------------------

                                    
  -- Задание(1(2)). Укажите назначение следующих функционалов:

	--words' str = filter (any (not . ec)) (groupBy ecec str)
	--	where ec x     = elem x " \r\n\t"
        --              ecec x y = ec x==ec y
 

  -------------------------------------------------------



  -- Задание(2(2)). Реализуйте следующие функционалы из библиотеки Prelude.

	foldl' f z []     = z                  
	foldl' f z (x:xs) = foldl' f (f z x) xs

	foldl1' f [x]         =  x
	foldl1' f (x:(y:ys))  =  foldl1' f (f x y : ys)	

  -------------- Test ---------------
	foldlTest  = foldl' (/) 64 [4,4,2]
	foldl1Test = foldl1' (+) [1..5]
  -----------------------------------

