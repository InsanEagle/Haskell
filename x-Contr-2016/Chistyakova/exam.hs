   -- 21. Установите условие задачи.

   zamena :: (Integral a, Floating b) => [(a,b)] -> [(a,b)]
   zamena = map (\(k,a) -> (k, a + fromIntegral k))
   -----------------------------------------------------------------------------                              
   -- Задача: напишите функцию, возвращающую список пар, в котором первый
   --         элемент остается неизменным, а ко второму элементу добавляется
   --         первый. Функции на вход подаётся список пар: первое число - целое,
   --         второе с плавающей запятой.
   -----------------------------------------------------------------------------
   --testzam = zamena [(3,4,1), (2,2,5), (4,1,8)]  == [(3,7,1),(2,4,5),(4,5,8)]
   --        && zamena [(2,3,5), (3,4,10), (1,2,3)] == [(2,5,5),(3,7,10),(1,3,3)]
   -- 22. Повторите каждый элемент списка заданное число раз.

   f1 ::[a] -> Int -> [a]
   f1   [] n = []
   f1 (x:xs) n = replicate n x ++ f1 xs n
   -- Тестовые примеры:
   test = f1 [5,4,2] 3    == [5,5,5,4,4,4,2,2,2] 
       && f1 [3,2,1,5] 2  == [3,3,2,2,1,1,5,5] 
       && f1 [2,1] 4      == [2,2,2,2,1,1,1,1]

   -- 23. Удалите каждый n-ый элемент списка.
   f2:: Integer -> [Integer] -> [Integer]
   f2 x lst | null lst = []
            | x == head lst = tail lst
            | True = (:) (head lst) (f2 x (tail lst))

   -- Тестовые примеры:
   testf2 = f2 1 [48,16,71,4] == [16,71,4]
         && f2 2 []           == []
         && f2 3 [2,5,6,7]    == [2,5,7]
   -- 24. Выделите список с n-ого по k-ый номер.
   f3 n k lst = drop n (take k lst)
