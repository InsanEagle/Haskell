                         2Задачи для экзамена
       ( 1осенний семестр 2016-2017 уч. год, ИС, первый курс 0)

    21. 0 Установите условие задачи.
 ш1.0

   zamena :: (Integral a, Floating b) => [(a,b)] -> [(a,b)]
   zamena = map (\(k,a) -> (k, a + fromIntegral k))

 ш1.2
    22. 0 Повторите каждый элемент списка заданное число раз.
 ш1.0

   > f "abc" 3
   "aaabbbccc"

 ш1.2
    23. 0 Удалите каждый n-ый элемент списка.
 ш1.0

   > f "abcdefghik" 3
   "abdeghk"

 ш1.2
    24. 0 Выделите подсписок с n-го по k-ый номер [n;k).
 ш1.0

   > f "abcdefghik" 2 5
   "cde"

 ш1.2
    25. 0 Задайте циклическую ротацию списка влево.
 ш1.0

   > f "abcdefghik" (-2)
   "ikabcdefgh"

 ш1.2
    26. 0 Удалите n-ый элемент из списка, вернув его и список.
 ш1.0

   > f 1 "abcd"
   ('b',"acd")

 ш1.2
    27. 0 Найдите все сочетания из элементов заданного списка по n эле-
ментов.
 ш1.0

   > f 3 "abcde"
   ["abc","abd","acd","bcd","abe","ace","bce","ade","bde","cde"]

 ш1.2
    28. 0 Используя правую свёртку, напишите функцию, конструирующую из
списка строк строку, разделённую запятыми.
 ш1.0

   > f ["ab","cde","fgh"]
   "ab,cde,fgh"

 ш1.2
.
    29. 0 Улучшите код следующей функции:

   -- Функция добавляет (без нарушения упорядоченности) число-
   -- вую пару (x,y) в ассоциативный список alist, пары  кото-
   -- рого расположены в порядке убывания данных.
   -- Если пара (x,y) есть в списке, то она не добавляется
   -------------------------------------------------------
   acons2:: Integer -> Double -> [(Integer,Double)]
                              -> [(Integer,Double)]
   acons2 x y alist 
         | null alist          = [(x,y)]
         | y<snd (head alist)  = head alist : 
                                 acons2 x y (tail alist)
         | y>snd (head alist)  = (x,y) : alist
         | x==fst (head alist) = acons2 x y (tail alist)
         | True                = head alist : 
                                 acons2 x y (tail alist)

   -- ***************************
   -- Неудачные тестовые примеры:
   -----------------------------------------------
   test =   acons2 3 33.0 []         == [(3,33.0)]
         && acons2 2 22.0 [(2,22.0)] == [(2,22.0)]
         && acons2 5 55.0 [(44,4.0),(45,3.0),(3,2.0)]
              == [(5,55.0),(44,4.0),(45,3.0),(3,2.0)]
         && acons2 3  5.0 [(2,22.0),(4,11.0)]
                      == [(2,22.0),(4,11.0),(3,5.0)]
         && acons2 3 15.0 [(2,22.0),         (4,11.0)]
                       == [(2,22.0),(3,15.0),(4,11.0)]
         && acons2 3 33.0 [(3,33.0),(2,22.0),(4,11.0)]
                       == [(3,33.0),(2,22.0),(4,11.0)]
         && acons2 2 22.0 [(3,33.0),(2,22.0),(4,11.0)]
                       == [(3,33.0),(2,22.0),(4,11.0)]
         ---------------------------------------------
         && acons2 3  3.0 [(3,7.0),(3,5.0)]
                       == [(3,7.0),(3,5.0),(3,3.0)]
         && acons2 3  3.0 [(3,7.0),(3,4.0),        (3,1.0)]
                       == [(3,7.0),(3,4.0),(3,3.0),(3,1.0)]
         
         && acons2 3  3.0 [(3,3.0),(3,3.0),(3,3.0)]
                       == [(3,3.0)]
         ------------------------------------
         -- Построение ассоциативного списка,
         -- упорядоченного по убыванию данных
         ------------------------------------
         && acons2 1 1.0
             (acons2 10 1.0
               (acons2 10 2.0
                 (acons2 5 2.0
                   (acons2 4 1.0
                     (acons2 1 3.0 [])))))
         == [(1,3.0),(5,2.0),(10,2.0),(4,1.0),(10,1.0),(1,1.0)]
   ------------------------------------------------------------
   test1 =   zamena [(1,0.1),(2,0.4),(3,0.5)]
                 == [(1,1.1),(2,2.4),(3,3.5)]
          && zamena [(1,0.1),(5,0.4),(3,0.5)]
                 == [(1,1.1),(5,5.4),(3,3.5)]

    210. 0 Улучшите код функции

    2acons2 x y alist 0,

которая позволяет добавить новую (!) пару элементов (x,y),  где x и
y - числа,  в числовой ассоциативный список alist,  пары  элементов
которого расположены в порядке  1убывания 0 значения их  1данных 0.
   Например:

   -- Добавление в начало
   > acons2 3 33.0 []
   [(3,33.0)]

   -- Добавление в конец
   > acons2 5 55.0 [(44,4.0),(45,3.0),(3,2.0)]
   [(5,55.0),(44,4.0),(45,3.0),(3,2.0)]

   -- Добавление в середину
   > acons2 3 15.2 [(2,22.1),(4,11.45)]
   [(2,22.1),(3,15.2),(4,11.45)]

   -- Добавление пары, которая уже есть в списке
   > acons2 2 22.0 [(3,33.0),(2,22.0),(4,11.0)]
   [(3,33.0),(2,22.0),(4,11.0)]


    211. 0 Укажите назначение следующей функции:

   {-# LANGUAGE RankNTypes #-}
   {-# LANGUAGE ScopedTypeVariables #-}

   test17 :: forall a. forall b. forall g.
                         ((a -> b) -> (a -> g)) -> (a -> (b -> g))
   test17 = \(f :: (a -> b) -> (a -> g)) (x :: a) (y :: b)
                                                  -> f (const y) x
