         Анкета для студентов института компьютерных наук
                  и технологического образования

   Укажите номер курса, на котором Вы учитесь: ...

   I. Выделите  набор  профессий,  в которых Вы "видите" себя после
обучения в ВУЗе,  и расставьте выделенный набор профессий в порядке
приоритетности от высшего к низшему (не более пяти):
   1. Администратор по защите информации (администратор по безопас-
ности).
   2. Аналитик бизнес-процессов.
   3. Аниматор.
   4. Аранжировщик компьютерной музыки.
   5. Веб-дизайнер.
   6. Веб-мастер (веб-программист).
   7. Верстальщик (специалист по компьютерной вёрстке).
   8. Видеомонтажёр.
   9. Директор информационной службы (начальник ИТ-подразделения).
   10. ИТ-менеджер.
   11. Консультант (эксперт) на "горячей линии".
   12. Менеджер программного проекта.
   13. Модератор.
   14. Наладчик (специалист по поддержке) ПО.
   15. Оператор баз данных.
   16. Пользователь.
   17. Прикладной программист.
   18. Программист.
   19. Продавец-консультант компьютерной техники и ПО.
   20. Разработчик вычислительной техники.
   21. Редактор (обозреватель) сайта.
   22. Системный администратор ("сисадмин").
   23. Системный оператор.
   24. Системный программист.
   25. Тестер.
   26. Технический писатель.
   27. Технический специалист (специалист по  ремонту  и  апгрейду,
специалист по железу).
   28. Учёный компьютерных наук (выберите каких именно).
   (1) дискретные математические структуры;
   (2) теоретические основы программирования;
   (3) алгоритмы и их сложность;
   (4) языки программирования;
   (5) архитектура и организация сложных систем;
   (6) операционные системы;
   (7) вычисления с помощью сетей ЭВМ;
   (8) проблемы взаимодействия человек-компьютер;
   (9) компьютерная графика и визуализация;
   (10) интеллектуальные компьютерные системы;
   (11) управление процессами обработки информации;
   (12) технологии промышленного производства программного  обеспе-
чения;
   (13) социальные и профессиональные проблемы компьютерных наук;
   (14) компьютерное моделирование и численные методы.
   29. Учитель информатики.
   30. Фотограф (специалист по цифровой фотографии).
   31. Фотожурналист в Интернете.
   32. Хелпрайтер.
   33. Цветокорректор.
   34. Цветоустановщик.
   35. Эникейщик.

   II. Выделите  вид(ы) профессиональной деятельности символом "+",
к которой Вас готовят в бакалавриате, исходя из изученных дисциплин
и полученных Вами знаний:
   1. Проектно-конструкторская.
   2. Проектно-технологическая.
   3. Производственно-технологическая.
   4. Организационно-управленческая.
   5. Научно-исследовательская.
   6. Инновационная.
   7. Монтажно-наладочная.
   8. Сервисно-эксплуатационная.

   III. Перечислите  критерии простоты изучения дисциплин (не вызы-
вающих трудности) по:
   (1) содержанию (например,  связанное с числом понятий,  алгорит-
мов,  формальных языков,  наличием  связей  с  другими  дисциплина-
ми,...);
   (2) методам (см. в Интернете методы обучения, их классификацию);
   (3) средствам (см. в Интернете средства обучения, их классифика-
цию);
   (4) формам (см. в Интернете формы обучения, их классификацию).

   IV. Перечислите  критерии сложности изучения дисциплин (вызываю-
щих трудности) по:
   (1) содержанию (например,  связанное с числом понятий,  алгорит-
мов,  формальных языков,  наличием  связей  с  другими  дисциплина-
ми,...);
   (2) методам (см. в Интернете методы обучения, их классификацию);
   (3) средствам (см. в Интернете средства обучения, их классифика-
цию);
   (4) формам (см. в Интернете формы обучения, их классификацию).

   V(1). Перечислите языки программирования,  которые Вы распознаё-
те, глядя на код программы.

   V(2). Перечислите языки программирования, для которых Вы распоз-
наёте алгоритм, глядя на код программы.

   VI. Перечислите языки программирования (для каждого  отмеченного
далее пункта),  на которых Вы умеете конструировать программы,  ис-
пользуя:
   (1) встроенные в язык типы данных (без подключения библиотек);
   (2) структуры данных и методы работы с ними, используя библиоте-
ки;
   (3) собственные структуры данных.

   VII. Выберите варианты того,  как Вы осуществляете  тестирование
написанных Вами программ:
   (1) несколько запусков программы с вводом данных с клавиатуры  и
просмотров результатов программы на экране дисплея;
   (2) составление набора тестовых примеров (учитывающих  все  воз-
можные  варианты развития действий программы) и запись их в отдель-
ный модуль (или в конец программы) для тестирования программы;
   (3) использование  других  программных  средств для проверки ре-
зультатов своих программ.  Приведите примеры  программных  средств,
которые Вы использовали;
   (4) использование теоретического формального языка  (исчисление)
для  обоснования  правдоподобности  вывода результата программы или
правильности самой программы.  Приведите примеры формальных языков,
которые Вы использовали;
   (5) другое (напишите свой вариант).

   VIII. Выделите набор источников информации для изучения  дисцип-
лин  в  ВУЗе и укажите процент использования каждого из выделенного
вида источника информации:
   (1) страницы Интернета;
   (2) электронный вариант книг на русском языке;
   (3) электронный вариант книг на английском (или другом иностран-
ном) языке;
   (4) электронный вариант статей на русском языке;
   (5) электронный  вариант статей на английском (или другом иност-
ранном) языке;
   (6) печатный вариант книг на русском языке;
   (7) печатный вариант книг на английском (или другом иностранном)
языке;
   (8) печатный вариант статей на русском языке;
   (9) печатный  вариант статей на английском (или другом иностран-
ном) языке;
   (10) электронный вариант материалов преподавателей.
   (11) печатный вариант материалов преподавателей.

   Для ответа  на последние два вопроса (IX и X) потребуется знание
понятия " _теоретическое программирование .".

    _Теоретическое программирование . (называемое также в ряде перевод-
ных  работ  теоретической  вычислительной наукой или математической
теорией вычислений) (А.П.Ершов) - это новый  раздел  математической
науки,  чьим  объектом  изучения являются математические абстракции
программ - предписаний,  выраженных на специальных  алгоритмических
языках,  обладающих определённой информационной и логической струк-
турой и подлежащих выполнению на автоматических вычислительных  ма-
шинах.
    _Теоретическое программирование . (с гносеологической точки зрения)
- это наука о математических моделях понятия "программа";  в  част-
ности, программа - это формула в некоторой разновидности логическо-
го языка.
   Содержание теоретического программирования включает:
   1.  _Математические основы программирования ..
   Основная цель исследований - развитие математического  аппарата,
ориентированного на теоретическое программирование,  разработка об-
щей теории машинных вычислений. Эти исследования тесно соприкасают-
ся  с логикой,  алгеброй,  теорией алгоритмов и вычислимых функций,
теорией сложности вычислений,  теорией автоматов, формальных языков
и грамматик.
   Отметим основные разделы содержания:
   (1) лямбда-исчисление,  в котором изучаются  способы  построения
чистого  исчисления функциональной абстракции и аппликации функций.
лямбда-исчисление выполняет важную роль при изучении оснований  ма-
тематики, является основным аппаратом исследования систем типизации
и инструментом для разработки и применения языков программирования;
   (2) комбинаторная логика,  в котором показано, что связанные пе-
ременные можно исключить без потери выразительных возможностей фор-
мальной системы. Комбинаторная логика нашла применение для построе-
ния оснований математики, а также в развитии методов и средств реа-
лизации языков программирования;
   (3) интуиционистская математическая логика (гильбертовское, ген-
ценовское, секвенциальное исчисление, аналитические таблицы, пропо-
зициональная логика, предикатная логика);
   (4) теория типов языков программирования (лямбда-куб  Барендрег-
та);
   (5) теория категорий, в котором рассматривается язык математики,
отличный от языка теории множеств и содержащий всего  две  сущности
(объекты и морфизмы),  причём морфизмы в свою очередь можно считать
объектами.
   2.  _Теория схем программ . ( _схематология .).
   В данной теории внимание концентрируется на изучении структурных
свойств и преобразований программ,  а именно тех,  которые отличают
программы  от других способов задания алгоритмов.  Главным объектом
исследования становится схема  программы  -  математическая  модель
программы,  в  которой с той или иной степенью детализации отражено
строение программы, взаимодействие составляющих ее компонентов.
   3.  _Семантическая теория программ ..
   Формальная семантика языков  программирования  (аксиоматическая,
денотационная, операционная).
   Семантика программы или отдельных конструкций языков  программи-
рования  -  это  их смысл,  математический смысл для программиста и
описание функционирования для машины.  Этот  раздел  теоретического
программирования  изучает  методы  формального  описания  семантики
программ,  семантические методы преобразований и доказательства ут-
верждений о программах. В частности, работы по методам проверки се-
мантической правильности программ нацелены на автоматизацию их  от-
ладки и автоматический синтез программ.
   4.  _Теория вычислительных процессов и структур . ( _теория параллель-
 _ных вычислений .).
   Исследования в этой области направлены на разработку и обоснова-
ние новых методов и средств программирования,  прежде всего методов
программирования конкурентных и параллельных процессов.
В  частности,  изучаются  структуры и функционирование операционных
систем, методы распараллеливания алгоритмов и программ, ведется по-
иск  новых  архитектурных  принципов конструирования вычислительных
машин и систем на основе результатов и рекомендаций  теоретического
программирования и вычислительной математики.
   5.  _Метрическая теория программ ..
   В основу этой теории положено приближенное комбинаторное соотно-
шение, определяющее длину программы через число простых (различных)
операторов  и  простых операндов.  Это простое соотношение обладает
удивительно мощным экстраполирующим  свойством:  достаточно  знать,
сколько будет обрабатываться данных и какими операторами, для того,
чтобы предсказать,  какой длины будет реализующая алгоритм програм-
ма.  В теории классифицируются все несовершенства программы, умень-
шающие их эффективность,  производится прогнозирование времени раз-
работки программ, числа ошибок программирования априорно, по задан-
ному алгоритму.
   6.  _Прикладные задачи теоретического программирования ..
   Сюда в первую очередь относятся разработка и  обоснование  алго-
ритмов трансляции и алгоритмов автоматической оптимизации программ.
Однако диапазон практических задач, решаемых методами теоретическо-
го программирования, постоянно расширяется.

   IX. Представьте дисциплины, в которых Вы изучали элементы теоре-
тического программирования.  Для каждого выделенного курса перечис-
лите, что именно из теоретического программирования Вы изучили.

   X. Доступно  ли изложена информация по теоретическому программи-
рованию в Интернете для того,  чтобы воспользоваться ею для решения
предлагаемых задач в курсах с элементами теоретического  программи-
рования?
