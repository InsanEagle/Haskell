  -- Лабораторная работа №4
  -- Списки. Стандартные функции обработки списков из библиотеке Prelude
  -- Вариант 9(1)
  -- Гончаренко Шамиль ИСИТ (2 подгруппа)
  -------------------------------------------------------


  --------------------- Раздел 1 ------------------------


  -- Задание(1). Определите прагматику функций.

  -- 1) Если список не пустой, то возвращается его хвост, иначе возвращается пустой список.

  -- 2) Если список не пустой, то первый элемент дублируется, иначе возвращается пустой список

  -- 3) Если список не пустой, то возвращает последний элемент, иначе ошибка

  -- 4) Если список не пустой, то проверяется, есть ли первый элемент в остальном списке.

  -- 5) То же, что и reverse

  -------------------------------------------------------

  -- Задание(3). Напишите функцию, определяющую индекс элемента числового списка,
  --             значение которого равно сумме первого и последнего элемента того же списка.


	f1 lst = (length ( takeWhile (\x -> not(x == (head lst + last lst))) lst))   

   ---------- Test ------------
	f1Test = f1 [1,3,4,5,6,8,7]
  -----------------------------------
               
  -- Задание(9). Напишите функцию, которая по двум спискам, имеющим одинаковую длину, возвращает 
  --             (1) Первый список, если сумма элементов первого списка совпадает с суммой элементов второго.
  --             (2) Сумму элементов второго элемента в противном случае.


	f2 lst1 lst2 | sum lst1 == sum lst2 = lst1
        	     | True = sum lst2:[]

               
   ---------- Test ------------
	f2Test1 = f2 [1,2,3] [6]
	f2Test2 = f2 [] [1,2,3]
  -----------------------------------

  -- Задание(10). По закону Российской Федерации призводители обязаны маркировать маркировать продукцию с генетически 
  --              модифицированными ингридиентами с помощью номера (PLU-кода) на наклейке производителя.
  --              По заданному коду установите свойства продукта


	f3 n    | n > 9999 && (n < 100000) && (n `div` 10000) == 9      = 1
                | n > 999  && (n < 10000)  && elem (n `div` 1000) [3,4] = 2
                | n > 9999 && (n < 100000) && (n `div` 10000) == 8      = 3
                | True = 0

               
   ---------- Test ------------
	f3Test1 = f3 91234
	f3Test2 = f3 3021
	f3Test3 = f3 80231
        f3Test4 = f3 444


  --------------------- Раздел 2 ------------------------



  -- Задание(3). Напишите функцию, меняющую местами пару элементов списка по их указанным индексам.

	f4 lst a b | a > b = t lst b a
                   | a < b = t lst a b
                   | a == b = lst
		where
	  	   t lst a b = take a lst ++ [lst !! b] ++ (drop (a+1) $ take b lst) ++ [lst !! a] ++ drop (a+b-1) lst


  ---------- Test ------------	
	f4Test1 = f4 [1,2,3,4,5,6,7,8,9,10] 3 7  



  --------------------- Раздел 3 ------------------------



  -- Задание(4). Напишите функцию, объединяющую два заданных списка, если сумма
  --             максимального элемента первого списка и минимального элемента второго
  --             списка равна заданному числу, в противном случае функция возвращает пустой список.

	f5 lst1 lst2 n | maximum lst1 + minimum lst2 == n = lst1 ++ lst2
                       | True = []
                          
   ---------- Test ------------
	f5Test1 = f5 [1,3,5] [5,10] 10
	f5Test2 = f5 [1,3,5] [5,10] 5
  ----------------------------------

  -- Задание(5). Напишите функцию, конструирующую список из заданных списков.              
  
	f6 lst1 lst2 n | head lst1 == lst2 !! n-1  && head lst2 == lst1 !! n-1 = take (n-2) (tail lst1) ++ take (n-2) (tail lst2) 
                       | head lst1 == lst2 !! n-1  && head lst2 /= lst1 !! n-1 = take (n-1) (tail lst1) ++ take (n-1) lst2 
                       | head lst1 /= lst2 !! n-1  && head lst2 == lst1 !! n-1 = take (n-1) lst1 ++ take (n-1) (tail lst2) 
                       | True = take n lst1 ++ take n lst2
                          
   ---------- Test ------------
	f6Test1 = f6 [3,4,5,6,7] [5,4,3,11,12] 3
	f6Test2 = f6 [3,4,5,6,7] [5,4,7,11,12] 3
        f6Test3 = f6 [3,4,3,6,7] [5,4,3,11,12] 3
        f6Test4 = f6 [50,13,10] [20,30,100] 2	


  --------------------- Раздел 3 ------------------------

  -- Задание (5). Переведите следующие точечные записи списка в списочные.

	f7Test1 = (1:(2:(3:(4:(5:[])))))                  == [1,2,3,4,5]

	f7Test2 = ((1:[]):((2:[]):((3:[]):[])))           == [[1],[2],[3]]

	f7Test3 = (((2:(1:[])):[]):[])                    == [[[2,1]]]

	f7Test4 = ((5:(1:[])):((2:(3:[])):[]))            == [[5,1],[2,3]]

	f7Test5 = (((1:[]):((2:[]):[])):(((3:[]):[]):[])) == [[[1],[2]],[[3]]] 
                                                
  -- Задание (7). Переведите следующие списочные записи списка в точечные.

--	f8Test1 = []                                    == []    -- Интерпритатор ругается
 
--	f8Test2 = [[]]                                  == []:[] -- Интерпритатор ругается

	f8Test3 = [[1],[2],[3],[4]]                     == (1:[]):(2:[]):(3:[]):(4:[]):[]

	f8Test4 = [[1,2],[3,4]]                         == (1:2:[]):(3:4:[]):[]

	f8Test5 = [[1],[2,22],[3,33,333]]               == (1:[]):(2:22:[]):(3:33:333:[]):[]

	f8Test6 = [[[9,8,7,6]],[[5,4,3]],[[2,1]],[[0]]] == ((9:8:7:6:[]):[]):((5:4:3:[]):[]):((2:1:[]):[]):((0:[]):[]):[]







