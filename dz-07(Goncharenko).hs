  -- Лабораторная работа №7
  -- Функционалы-свертки на списках. Программирование в стиле оригами
  -- Вариант 9(1)
  -- Гончаренко Шамиль ИСИТ (2 подгруппа)
  -- Часть 1
  -------------------------------------------------------


  --------------------- Раздел 1 ------------------------


  -- Задание(1). Определите назначение слудующих функций.

  -- (1). Функция считает сумму от 1 до 10.

  -- (2). Функция суммирует элементы списка. Аналагично sum.
 
  -- (3). Функция находит произведение всех элементов списка. Аналагично product.

  -- (4). Функция находит наксимальный элемент масива.

  -- (5). Функция проверяет, есть ли в списле элемент elem.

  -- (6). Функция выводит половину списка lst. 

  -- (7). Функция выводит список факториалов от 1 до n.

  -- (8). -

  -- (9). Функция возврящает значение sin(x) + sin(sin(x)) + .. sin(sin..(sin(50))).

  -- (10). Функция выводит список от m до n.

  -- (11). Функция группирует по n элементы списка.

  -- (12). Функция возвращает список цифр числа.
               

  --------------------- Раздел 2 ------------------------


  -- Задание(1(1,2)). Реализуйте следующие функции с помощью свертки foldr


	sum' = foldr (+) 0
	
	product' = foldr (*) 1
	
	and' = foldr (&&) True

	or' = foldr (||) False

	concat' = foldr (++) []

	head' = foldr  (\x _ -> x) undefined

	f1 u v = foldr (\u v -> u:v) v u 
 
	length'  = foldr (\n t -> t+1) 0 
      
	reverse' = foldr (\t n -> n++[t]) []

	last' = foldl (\x y -> y) undefined
	

  -------------- Test ---------------
	f1Test1 = sum' [1..10]
	f1Test2 = product' [1,2,3,4]
	f1Test3 = and' [True,True,False,False]
	f1Test4 = or' [True,True,False,False]
	f1Test5 = concat' [[1,2,3],[1,2,3]]
	f1Test6 = head' [2,3,4,5]
	f1Test7 = f1 [1,2,3] [4,5,6]
	f1Test8 = length' [1..20]
	f1Test9 = reverse' [1..10]
	f1Test10 = last' [1..10]
  -----------------------------------

  -------------------------------------------------------

  -- Задание(3). Реализуйте следующие функции с помощью свертки foldl

        sum'' = foldl (+) 0
	
	product'' = foldl (*) 1
	
	and'' = foldl (&&) True

	or'' = foldl (||) False

	concat'' = foldl (++) []

	last'' = foldl  (\x y -> y) undefined

	f2 u v = foldl (\v u -> u:v) v (reverse u) 
 
	length''  = foldl (\n t -> t+1) 0 
      
	reverse'' = foldl (\n t -> [t]++n) []

	head'' = foldl1 (\x _ -> x)
	

  -------------- Test ---------------
	f2Test1 = sum'' [1..10]
	f2Test2 = product'' [1,2,3,4]
	f2Test3 = and'' [True,True,False,False]
	f2Test4 = or'' [True,True,False,False]
	f2Test5 = concat'' [[1,2,3],[1,2,3]]
	f2Test6 = last'' [2,3,4,5]
	f2Test7 = f2 [1,2,3] [4,5,6]
	f2Test8 = length'' [1..20]
	f2Test9 = reverse'' [1..10]
	f2Test10 = head'' [1..10]
  -----------------------------------

